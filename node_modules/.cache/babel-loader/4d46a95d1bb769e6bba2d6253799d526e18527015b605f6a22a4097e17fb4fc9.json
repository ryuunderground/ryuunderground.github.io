{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/GitHub/magic_club_react/src/Router.tsx\";\nimport { createBrowserRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport App from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavTitle = styled.div`\n  width: 100%;\n  height: 3rem;\n  border: 3px solid var(--dark-brown);\n  background-color: var(--red-brown);\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  box-sizing: border-box;\n  position: absolute;\n  top: 6rem;\n`;\nconst NavTitleText = styled.span`\n  font-size: 1rem;\n  font-weight: 600;\n  color: var(--cream);\n  padding-left: 1rem;\n`;\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 14\n  }, this)\n}]);\n{\n  /*\n  function Router() {\n  return (\n    <BrowserRouter>\n      <Header />\n      <NavTitle>\n        <NavTitleText>메뉴 탭 이름</NavTitleText>\n        =====================================================\n        {MenusAPI.map((title) => (\n          <NavTitleText className=\"NavTitleText__name\" key={title}>\n            {title}\n          </NavTitleText>\n        ))}\n        ========백엔드에서 API 받으면 어떤 형식인지에 따라 맞추기=======\n      </NavTitle>\n      <Routes>\n        <Route path=\"/\" element={<Main />} />\n        <Route path=\"/introduction\" element={<Introduction />} />\n        <Route path=\"/event\" element={<Event />} />\n        <Route path=\"/notice\" element={<Post />} />\n      </Routes>\n      <Footer />\n    </BrowserRouter>\n  );\n  }\n  export default Router;\n  */\n}\nexport default router;","map":{"version":3,"names":["createBrowserRouter","styled","App","jsxDEV","_jsxDEV","NavTitle","div","NavTitleText","span","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/macbook/Documents/GitHub/magic_club_react/src/Router.tsx"],"sourcesContent":["import {\n  BrowserRouter,\n  Routes,\n  Route,\n  createBrowserRouter,\n} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Main from \"./screens/Main\";\nimport Introduction from \"./screens/Introduction\";\nimport Event from \"./screens/Event\";\nimport Post from \"./screens/Post\";\nimport App from \"./App\";\n\nconst NavTitle = styled.div`\n  width: 100%;\n  height: 3rem;\n  border: 3px solid var(--dark-brown);\n  background-color: var(--red-brown);\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  box-sizing: border-box;\n  position: absolute;\n  top: 6rem;\n`;\nconst NavTitleText = styled.span`\n  font-size: 1rem;\n  font-weight: 600;\n  color: var(--cream);\n  padding-left: 1rem;\n`;\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <App />,\n  },\n]);\n{\n  /*\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Header />\n      <NavTitle>\n        <NavTitleText>메뉴 탭 이름</NavTitleText>\n        =====================================================\n        {MenusAPI.map((title) => (\n          <NavTitleText className=\"NavTitleText__name\" key={title}>\n            {title}\n          </NavTitleText>\n        ))}\n        ========백엔드에서 API 받으면 어떤 형식인지에 따라 맞추기=======\n      </NavTitle>\n      <Routes>\n        <Route path=\"/\" element={<Main />} />\n        <Route path=\"/introduction\" element={<Introduction />} />\n        <Route path=\"/event\" element={<Event />} />\n        <Route path=\"/notice\" element={<Post />} />\n      </Routes>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n*/\n}\n\nexport default router;\n"],"mappings":";AAAA,SAIEA,mBAAmB,QACd,kBAAkB;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAOtC,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGJ,MAAM,CAACK,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,MAAMC,YAAY,GAAGN,MAAM,CAACO,IAAK;AACjC;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,MAAM,GAAGT,mBAAmB,CAAC,CACjC;EACEU,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEP,OAAA,CAACF,GAAG;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AACjB,CAAC,CACF,CAAC;AACF;EACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BE;AA8BF,eAAeN,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}