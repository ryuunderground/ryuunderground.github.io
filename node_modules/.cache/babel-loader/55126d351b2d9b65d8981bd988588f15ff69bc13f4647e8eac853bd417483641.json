{"ast":null,"code":"import{createBrowserRouter}from\"react-router-dom\";import Main from\"./screens/Main\";import ClubInfo from\"./screens/ClubInfo\";import Event from\"./screens/Event\";import App from\"./App\";import NotFound from\"./screens/NotFound\";import ErrorComponent from\"./components/ErrorComponent\";import MyPage from\"./screens/Mypage\";import EventApply from\"./screens/EventApply\";import Login from\"./screens/Login\";import Register from\"./screens/Regiser\";import{jsx as _jsx}from\"react/jsx-runtime\";const router=createBrowserRouter([{path:\"/\",element:/*#__PURE__*/_jsx(App,{}),children:[{path:\"\",element:/*#__PURE__*/_jsx(Main,{}),errorElement:/*#__PURE__*/_jsx(ErrorComponent,{})},{path:\"club_info\",element:/*#__PURE__*/_jsx(ClubInfo,{}),errorElement:/*#__PURE__*/_jsx(ErrorComponent,{})},{path:\"event\",element:/*#__PURE__*/_jsx(Event,{}),errorElement:/*#__PURE__*/_jsx(ErrorComponent,{})},{path:\"my_page\",element:/*#__PURE__*/_jsx(MyPage,{}),errorElement:/*#__PURE__*/_jsx(ErrorComponent,{})},{path:\"event_apply\",element:/*#__PURE__*/_jsx(EventApply,{}),errorElement:/*#__PURE__*/_jsx(ErrorComponent,{})},{path:\"login\",element:/*#__PURE__*/_jsx(Login,{}),errorElement:/*#__PURE__*/_jsx(ErrorComponent,{})},{path:\"register\",element:/*#__PURE__*/_jsx(Register,{}),errorElement:/*#__PURE__*/_jsx(ErrorComponent,{})}],errorElement:/*#__PURE__*/_jsx(NotFound,{})}]);{/*\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Header />\n      <NavTitle>\n        <NavTitleText>메뉴 탭 이름</NavTitleText>\n        =====================================================\n        {MenusAPI.map((title) => (\n          <NavTitleText className=\"NavTitleText__name\" key={title}>\n            {title}\n          </NavTitleText>\n        ))}\n        ========백엔드에서 API 받으면 어떤 형식인지에 따라 맞추기=======\n      </NavTitle>\n      <Routes>\n        <Route path=\"/\" element={<Main />} />\n        <Route path=\"/introduction\" element={<Introduction />} />\n        <Route path=\"/event\" element={<Event />} />\n        <Route path=\"/notice\" element={<Post />} />\n      </Routes>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n*/}export default router;","map":{"version":3,"names":["createBrowserRouter","Main","ClubInfo","Event","App","NotFound","ErrorComponent","MyPage","EventApply","Login","Register","jsx","_jsx","router","path","element","children","errorElement"],"sources":["/Users/macbook/Documents/GitHub/ryuunderground.github.io/src/Router.tsx"],"sourcesContent":["import { createBrowserRouter } from \"react-router-dom\";\nimport Main from \"./screens/Main\";\nimport ClubInfo from \"./screens/ClubInfo\";\nimport Event from \"./screens/Event\";\nimport App from \"./App\";\nimport NotFound from \"./screens/NotFound\";\nimport ErrorComponent from \"./components/ErrorComponent\";\nimport MyPage from \"./screens/Mypage\";\nimport EventApply from \"./screens/EventApply\";\nimport Login from \"./screens/Login\";\nimport Register from \"./screens/Regiser\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <App />,\n    children: [\n      {\n        path: \"\",\n        element: <Main />,\n        errorElement: <ErrorComponent />,\n      },\n      {\n        path: \"club_info\",\n        element: <ClubInfo />,\n        errorElement: <ErrorComponent />,\n      },\n      {\n        path: \"event\",\n        element: <Event />,\n        errorElement: <ErrorComponent />,\n      },\n      {\n        path: \"my_page\",\n        element: <MyPage />,\n        errorElement: <ErrorComponent />,\n      },\n      {\n        path: \"event_apply\",\n        element: <EventApply />,\n        errorElement: <ErrorComponent />,\n      },\n      {\n        path: \"login\",\n        element: <Login />,\n        errorElement: <ErrorComponent />,\n      },\n      {\n        path: \"register\",\n        element: <Register />,\n        errorElement: <ErrorComponent />,\n      },\n    ],\n    errorElement: <NotFound />,\n  },\n]);\n{\n  /*\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Header />\n      <NavTitle>\n        <NavTitleText>메뉴 탭 이름</NavTitleText>\n        =====================================================\n        {MenusAPI.map((title) => (\n          <NavTitleText className=\"NavTitleText__name\" key={title}>\n            {title}\n          </NavTitleText>\n        ))}\n        ========백엔드에서 API 받으면 어떤 형식인지에 따라 맞추기=======\n      </NavTitle>\n      <Routes>\n        <Route path=\"/\" element={<Main />} />\n        <Route path=\"/introduction\" element={<Introduction />} />\n        <Route path=\"/event\" element={<Event />} />\n        <Route path=\"/notice\" element={<Post />} />\n      </Routes>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n*/\n}\n\nexport default router;\n"],"mappings":"AAAA,OAASA,mBAAmB,KAAQ,kBAAkB,CACtD,MAAO,CAAAC,IAAI,KAAM,gBAAgB,CACjC,MAAO,CAAAC,QAAQ,KAAM,oBAAoB,CACzC,MAAO,CAAAC,KAAK,KAAM,iBAAiB,CACnC,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,MAAO,CAAAC,QAAQ,KAAM,oBAAoB,CACzC,MAAO,CAAAC,cAAc,KAAM,6BAA6B,CACxD,MAAO,CAAAC,MAAM,KAAM,kBAAkB,CACrC,MAAO,CAAAC,UAAU,KAAM,sBAAsB,CAC7C,MAAO,CAAAC,KAAK,KAAM,iBAAiB,CACnC,MAAO,CAAAC,QAAQ,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEzC,KAAM,CAAAC,MAAM,CAAGb,mBAAmB,CAAC,CACjC,CACEc,IAAI,CAAE,GAAG,CACTC,OAAO,cAAEH,IAAA,CAACR,GAAG,GAAE,CAAC,CAChBY,QAAQ,CAAE,CACR,CACEF,IAAI,CAAE,EAAE,CACRC,OAAO,cAAEH,IAAA,CAACX,IAAI,GAAE,CAAC,CACjBgB,YAAY,cAAEL,IAAA,CAACN,cAAc,GAAE,CACjC,CAAC,CACD,CACEQ,IAAI,CAAE,WAAW,CACjBC,OAAO,cAAEH,IAAA,CAACV,QAAQ,GAAE,CAAC,CACrBe,YAAY,cAAEL,IAAA,CAACN,cAAc,GAAE,CACjC,CAAC,CACD,CACEQ,IAAI,CAAE,OAAO,CACbC,OAAO,cAAEH,IAAA,CAACT,KAAK,GAAE,CAAC,CAClBc,YAAY,cAAEL,IAAA,CAACN,cAAc,GAAE,CACjC,CAAC,CACD,CACEQ,IAAI,CAAE,SAAS,CACfC,OAAO,cAAEH,IAAA,CAACL,MAAM,GAAE,CAAC,CACnBU,YAAY,cAAEL,IAAA,CAACN,cAAc,GAAE,CACjC,CAAC,CACD,CACEQ,IAAI,CAAE,aAAa,CACnBC,OAAO,cAAEH,IAAA,CAACJ,UAAU,GAAE,CAAC,CACvBS,YAAY,cAAEL,IAAA,CAACN,cAAc,GAAE,CACjC,CAAC,CACD,CACEQ,IAAI,CAAE,OAAO,CACbC,OAAO,cAAEH,IAAA,CAACH,KAAK,GAAE,CAAC,CAClBQ,YAAY,cAAEL,IAAA,CAACN,cAAc,GAAE,CACjC,CAAC,CACD,CACEQ,IAAI,CAAE,UAAU,CAChBC,OAAO,cAAEH,IAAA,CAACF,QAAQ,GAAE,CAAC,CACrBO,YAAY,cAAEL,IAAA,CAACN,cAAc,GAAE,CACjC,CAAC,CACF,CACDW,YAAY,cAAEL,IAAA,CAACP,QAAQ,GAAE,CAC3B,CAAC,CACF,CAAC,CACF,CACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EA3BE,CA8BF,cAAe,CAAAQ,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}